{"ast":null,"code":"import { Component } from 'react';\nimport Toast from 'react-native-toast-message';\nimport { APIs, ApiCaller } from '../../config';\nimport { ToastError, ToastSuccess } from '../../config/Constants';\nimport { AuthAction, LoaderAction } from '../Actions';\nexport class AuthMiddleware extends Component {\n  static registerUser({\n    firstName,\n    lastName,\n    phone,\n    email,\n    password,\n    profilePictureFileName\n  }) {\n    return dispatch => {\n      return new Promise(async (resolve, reject) => {\n        try {\n          let payload = {\n            emailAddress: email,\n            password: password,\n            firstName: firstName,\n            lastName: lastName,\n            // phone: phone,\n            profilePictureFileName: profilePictureFileName\n          };\n          dispatch(LoaderAction.LoaderTrue());\n          const response = await ApiCaller.Post(APIs.Signup, payload);\n          console.log('response', response);\n          if (response.data.statusCode === 200) {\n            resolve(response.data.data);\n            dispatch(LoaderAction.LoaderFalse());\n            Toast.show(ToastSuccess(response.data.message));\n          } else {\n            reject(false);\n            dispatch(LoaderAction.LoaderFalse());\n            Toast.show(ToastError(response.data.message));\n          }\n        } catch (error) {\n          reject(false);\n          dispatch(LoaderAction.LoaderFalse());\n          Toast.show(ToastError(error.message));\n        }\n      });\n    };\n  }\n}","map":{"version":3,"names":["Component","Toast","APIs","ApiCaller","ToastError","ToastSuccess","AuthAction","LoaderAction","AuthMiddleware","registerUser","firstName","lastName","phone","email","password","profilePictureFileName","dispatch","Promise","resolve","reject","payload","emailAddress","LoaderTrue","response","Post","Signup","console","log","data","statusCode","LoaderFalse","show","message","error"],"sources":["/Users/saifullahrazzaq/Desktop/Projects/my-app/ClientSide/src/redux/Middlewares/AuthMiddleware.js"],"sourcesContent":["import { Component } from 'react';\nimport Toast from 'react-native-toast-message';\nimport { APIs, ApiCaller } from '../../config';\nimport { ToastError, ToastSuccess } from '../../config/Constants';\nimport { AuthAction, LoaderAction } from '../Actions';\n\nexport class AuthMiddleware extends Component {\n  static registerUser({ firstName, lastName, phone, email, password, profilePictureFileName }) {\n    return dispatch => {\n      return new Promise(async (resolve, reject) => {\n        try {\n          let payload = {\n            emailAddress: email,\n            password: password,\n            firstName: firstName,\n            lastName: lastName,\n            // phone: phone,\n            profilePictureFileName: profilePictureFileName\n          }\n          dispatch(LoaderAction.LoaderTrue());\n          const response = await ApiCaller.Post(APIs.Signup,\n            payload,\n          );\n          console.log('response', response);\n          if (response.data.statusCode === 200) {\n            resolve(response.data.data);\n            dispatch(LoaderAction.LoaderFalse());\n            Toast.show(ToastSuccess(response.data.message));\n          } else {\n            reject(false);\n            dispatch(LoaderAction.LoaderFalse());\n            Toast.show(ToastError(response.data.message));\n          }\n        } catch (error) {\n          reject(false)\n          dispatch(LoaderAction.LoaderFalse());\n          Toast.show(ToastError(error.message));\n        }\n      });\n    };\n  }\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,KAAK,MAAM,4BAA4B;AAC9C,SAASC,IAAI,EAAEC,SAAS,QAAQ,cAAc;AAC9C,SAASC,UAAU,EAAEC,YAAY,QAAQ,wBAAwB;AACjE,SAASC,UAAU,EAAEC,YAAY,QAAQ,YAAY;AAErD,OAAO,MAAMC,cAAc,SAASR,SAAS,CAAC;EAC5C,OAAOS,YAAYA,CAAC;IAAEC,SAAS;IAAEC,QAAQ;IAAEC,KAAK;IAAEC,KAAK;IAAEC,QAAQ;IAAEC;EAAuB,CAAC,EAAE;IAC3F,OAAOC,QAAQ,IAAI;MACjB,OAAO,IAAIC,OAAO,CAAC,OAAOC,OAAO,EAAEC,MAAM,KAAK;QAC5C,IAAI;UACF,IAAIC,OAAO,GAAG;YACZC,YAAY,EAAER,KAAK;YACnBC,QAAQ,EAAEA,QAAQ;YAClBJ,SAAS,EAAEA,SAAS;YACpBC,QAAQ,EAAEA,QAAQ;YAClB;YACAI,sBAAsB,EAAEA;UAC1B,CAAC;UACDC,QAAQ,CAACT,YAAY,CAACe,UAAU,CAAC,CAAC,CAAC;UACnC,MAAMC,QAAQ,GAAG,MAAMpB,SAAS,CAACqB,IAAI,CAACtB,IAAI,CAACuB,MAAM,EAC/CL,OACF,CAAC;UACDM,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEJ,QAAQ,CAAC;UACjC,IAAIA,QAAQ,CAACK,IAAI,CAACC,UAAU,KAAK,GAAG,EAAE;YACpCX,OAAO,CAACK,QAAQ,CAACK,IAAI,CAACA,IAAI,CAAC;YAC3BZ,QAAQ,CAACT,YAAY,CAACuB,WAAW,CAAC,CAAC,CAAC;YACpC7B,KAAK,CAAC8B,IAAI,CAAC1B,YAAY,CAACkB,QAAQ,CAACK,IAAI,CAACI,OAAO,CAAC,CAAC;UACjD,CAAC,MAAM;YACLb,MAAM,CAAC,KAAK,CAAC;YACbH,QAAQ,CAACT,YAAY,CAACuB,WAAW,CAAC,CAAC,CAAC;YACpC7B,KAAK,CAAC8B,IAAI,CAAC3B,UAAU,CAACmB,QAAQ,CAACK,IAAI,CAACI,OAAO,CAAC,CAAC;UAC/C;QACF,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdd,MAAM,CAAC,KAAK,CAAC;UACbH,QAAQ,CAACT,YAAY,CAACuB,WAAW,CAAC,CAAC,CAAC;UACpC7B,KAAK,CAAC8B,IAAI,CAAC3B,UAAU,CAAC6B,KAAK,CAACD,OAAO,CAAC,CAAC;QACvC;MACF,CAAC,CAAC;IACJ,CAAC;EACH;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}