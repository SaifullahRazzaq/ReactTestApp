{"ast":null,"code":"import { applyMiddleware } from 'redux';\nimport { thunk } from 'redux-thunk';\nimport { configureStore } from '@reduxjs/toolkit';\nimport RootReducer from './Reducers';\nimport { persistStore } from 'redux-persist';\nimport { createLogger } from 'redux-logger';\n\n// const Store = createStore(\n//   RootReducer,\n//   {},\n//   applyMiddleware(\n//     createLogger(),\n//     thunk\n//   ),\n// );\nconst Store = configureStore({\n  reducer: RootReducer\n}, applyMiddleware(createLogger(), thunk));\nlet Persistor = persistStore(Store);\n// console.log(\"store===>\", Store)\n_c = Persistor;\nexport { Store, Persistor };\nvar _c;\n$RefreshReg$(_c, \"Persistor\");","map":{"version":3,"names":["applyMiddleware","thunk","configureStore","RootReducer","persistStore","createLogger","Store","reducer","Persistor","_c","$RefreshReg$"],"sources":["/Users/saifullahrazzaq/Desktop/Projects/my-app/ClientSide/src/redux/index.js"],"sourcesContent":["import { applyMiddleware } from 'redux';\nimport { thunk } from 'redux-thunk';\nimport { configureStore } from '@reduxjs/toolkit'\nimport RootReducer from './Reducers';\nimport { persistStore } from 'redux-persist';\nimport { createLogger } from 'redux-logger';\n\n// const Store = createStore(\n//   RootReducer,\n//   {},\n//   applyMiddleware(\n//     createLogger(),\n//     thunk\n//   ),\n// );\nconst Store = configureStore(\n\n  {\n    reducer: RootReducer,\n\n  },\n  applyMiddleware(\n    createLogger(),\n    thunk\n  ),\n)\nlet Persistor = persistStore(Store);\n// console.log(\"store===>\", Store)\nexport { Store, Persistor };\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,OAAO;AACvC,SAASC,KAAK,QAAQ,aAAa;AACnC,SAASC,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,WAAW,MAAM,YAAY;AACpC,SAASC,YAAY,QAAQ,eAAe;AAC5C,SAASC,YAAY,QAAQ,cAAc;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,KAAK,GAAGJ,cAAc,CAE1B;EACEK,OAAO,EAAEJ;AAEX,CAAC,EACDH,eAAe,CACbK,YAAY,CAAC,CAAC,EACdJ,KACF,CACF,CAAC;AACD,IAAIO,SAAS,GAAGJ,YAAY,CAACE,KAAK,CAAC;AACnC;AAAAG,EAAA,GADID,SAAS;AAEb,SAASF,KAAK,EAAEE,SAAS;AAAG,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}