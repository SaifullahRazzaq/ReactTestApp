{"ast":null,"code":"import { Component } from 'react';\nimport ApiCaller from '../../config/ApiCaller';\nimport { ToastSuccess, ToastError } from '../../config/ToastMessage';\nimport { LoaderAction } from '../Actions';\nimport API from '../../config/API';\nexport class AuthMiddleware extends Component {\n  static registerUser({\n    Username,\n    email,\n    password,\n    profilePictureFileName\n  }) {\n    return dispatch => {\n      return new Promise(async (resolve, reject) => {\n        try {\n          let payload = {\n            firstName: Username,\n            emailAddress: email,\n            password: password,\n            profilePictureFileName: profilePictureFileName\n          };\n          dispatch(LoaderAction.LoaderTrue());\n          const response = await ApiCaller.Post(API.Signup, payload);\n          console.log('response', response);\n          if (response.data.statusCode === 200) {\n            var _response$data;\n            resolve(response.data.data);\n            dispatch(LoaderAction.LoaderFalse());\n            ToastSuccess((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.message);\n          } else {\n            reject(false);\n            dispatch(LoaderAction.LoaderFalse());\n            ToastError(response.data.message);\n          }\n        } catch (error) {\n          reject(false);\n          dispatch(LoaderAction.LoaderFalse());\n          ToastError(error.message);\n        }\n      });\n    };\n  }\n}","map":{"version":3,"names":["Component","ApiCaller","ToastSuccess","ToastError","LoaderAction","API","AuthMiddleware","registerUser","Username","email","password","profilePictureFileName","dispatch","Promise","resolve","reject","payload","firstName","emailAddress","LoaderTrue","response","Post","Signup","console","log","data","statusCode","_response$data","LoaderFalse","message","error"],"sources":["/Users/saifullahrazzaq/Desktop/Projects/my-app/ClientSide/src/redux/Middlewares/AuthMiddleware.js"],"sourcesContent":["import { Component } from 'react';\nimport ApiCaller from '../../config/ApiCaller';\nimport { ToastSuccess, ToastError } from '../../config/ToastMessage';\nimport { LoaderAction } from '../Actions';\nimport API from '../../config/API';\n\nexport class AuthMiddleware extends Component {\n  static registerUser({ Username, email, password, profilePictureFileName }) {\n    return dispatch => {\n      return new Promise(async (resolve, reject) => {\n        try {\n          let payload = {\n            firstName: Username,\n            emailAddress: email,\n            password: password,\n            profilePictureFileName: profilePictureFileName\n          }\n          dispatch(LoaderAction.LoaderTrue());\n          const response = await ApiCaller.Post(API.Signup,\n            payload,\n          );\n          console.log('response', response);\n          if (response.data.statusCode === 200) {\n            resolve(response.data.data);\n            dispatch(LoaderAction.LoaderFalse());\n            ToastSuccess(response.data?.message)\n          } else {\n            reject(false);\n            dispatch(LoaderAction.LoaderFalse());\n            ToastError(response.data.message)\n          }\n        } catch (error) {\n          reject(false)\n          dispatch(LoaderAction.LoaderFalse());\n          ToastError(error.message)\n        }\n      });\n    };\n  }\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,SAASC,YAAY,EAAEC,UAAU,QAAQ,2BAA2B;AACpE,SAASC,YAAY,QAAQ,YAAY;AACzC,OAAOC,GAAG,MAAM,kBAAkB;AAElC,OAAO,MAAMC,cAAc,SAASN,SAAS,CAAC;EAC5C,OAAOO,YAAYA,CAAC;IAAEC,QAAQ;IAAEC,KAAK;IAAEC,QAAQ;IAAEC;EAAuB,CAAC,EAAE;IACzE,OAAOC,QAAQ,IAAI;MACjB,OAAO,IAAIC,OAAO,CAAC,OAAOC,OAAO,EAAEC,MAAM,KAAK;QAC5C,IAAI;UACF,IAAIC,OAAO,GAAG;YACZC,SAAS,EAAET,QAAQ;YACnBU,YAAY,EAAET,KAAK;YACnBC,QAAQ,EAAEA,QAAQ;YAClBC,sBAAsB,EAAEA;UAC1B,CAAC;UACDC,QAAQ,CAACR,YAAY,CAACe,UAAU,CAAC,CAAC,CAAC;UACnC,MAAMC,QAAQ,GAAG,MAAMnB,SAAS,CAACoB,IAAI,CAAChB,GAAG,CAACiB,MAAM,EAC9CN,OACF,CAAC;UACDO,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEJ,QAAQ,CAAC;UACjC,IAAIA,QAAQ,CAACK,IAAI,CAACC,UAAU,KAAK,GAAG,EAAE;YAAA,IAAAC,cAAA;YACpCb,OAAO,CAACM,QAAQ,CAACK,IAAI,CAACA,IAAI,CAAC;YAC3Bb,QAAQ,CAACR,YAAY,CAACwB,WAAW,CAAC,CAAC,CAAC;YACpC1B,YAAY,EAAAyB,cAAA,GAACP,QAAQ,CAACK,IAAI,cAAAE,cAAA,uBAAbA,cAAA,CAAeE,OAAO,CAAC;UACtC,CAAC,MAAM;YACLd,MAAM,CAAC,KAAK,CAAC;YACbH,QAAQ,CAACR,YAAY,CAACwB,WAAW,CAAC,CAAC,CAAC;YACpCzB,UAAU,CAACiB,QAAQ,CAACK,IAAI,CAACI,OAAO,CAAC;UACnC;QACF,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdf,MAAM,CAAC,KAAK,CAAC;UACbH,QAAQ,CAACR,YAAY,CAACwB,WAAW,CAAC,CAAC,CAAC;UACpCzB,UAAU,CAAC2B,KAAK,CAACD,OAAO,CAAC;QAC3B;MACF,CAAC,CAAC;IACJ,CAAC;EACH;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}