{"ast":null,"code":"import { SIGNIN, SIGNOUT, SIGNUP, NOTIFICATION_READ, UPDATE_COUNTER, GET_INDICATOR } from '../Constants';\nconst initialState = {\n  user: null\n};\nexport default function AuthReducer(state = initialState, action) {\n  switch (action.type) {\n    case SIGNIN:\n      state = {\n        ...state,\n        user: action.payload\n      };\n      break;\n    case SIGNUP:\n      state = {\n        ...state,\n        user: action.payload\n      };\n      break;\n    case SIGNOUT:\n      state = {\n        ...state,\n        user: null\n      };\n      break;\n    case NOTIFICATION_READ:\n      state = {\n        ...state,\n        isNotificationRead: action.payload\n      };\n      break;\n    case UPDATE_COUNTER:\n      state = {\n        ...state,\n        counter: action.payload\n      };\n      break;\n    case GET_INDICATOR:\n      state = {\n        ...state,\n        messageCount: action.payload.messageCount,\n        bookingCount: action.payload.bookingCount\n      };\n      break;\n    default:\n      break;\n  }\n  return state;\n}\n_c = AuthReducer;\nvar _c;\n$RefreshReg$(_c, \"AuthReducer\");","map":{"version":3,"names":["SIGNIN","SIGNOUT","SIGNUP","NOTIFICATION_READ","UPDATE_COUNTER","GET_INDICATOR","initialState","user","AuthReducer","state","action","type","payload","isNotificationRead","counter","messageCount","bookingCount","_c","$RefreshReg$"],"sources":["/Users/saifullahrazzaq/Desktop/Projects/my-app/ClientSide/src/redux/Reducers/AuthReducer.js"],"sourcesContent":["import {\n  SIGNIN,\n  SIGNOUT,\n  SIGNUP,\n  NOTIFICATION_READ,\n  UPDATE_COUNTER,\n  GET_INDICATOR,\n} from '../Constants';\n\nconst initialState = {\n  user: null,\n};\n\nexport default function AuthReducer(state = initialState, action) {\n  switch (action.type) {\n    case SIGNIN:\n      state = {\n        ...state,\n        user: action.payload,\n      };\n      break;\n    case SIGNUP:\n      state = {\n        ...state,\n        user: action.payload,\n      };\n      break;\n\n    case SIGNOUT:\n      state = {\n        ...state,\n        user: null,\n      };\n      break;\n    case NOTIFICATION_READ:\n      state = {\n        ...state,\n        isNotificationRead: action.payload,\n      };\n      break;\n    case UPDATE_COUNTER:\n      state = {\n        ...state,\n        counter: action.payload,\n      };\n      break;\n\n    case GET_INDICATOR:\n      state = {\n        ...state,\n        messageCount: action.payload.messageCount,\n        bookingCount: action.payload.bookingCount,\n      };\n      break;\n\n    default:\n      break;\n  }\n  return state;\n}\n"],"mappings":"AAAA,SACEA,MAAM,EACNC,OAAO,EACPC,MAAM,EACNC,iBAAiB,EACjBC,cAAc,EACdC,aAAa,QACR,cAAc;AAErB,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE;AACR,CAAC;AAED,eAAe,SAASC,WAAWA,CAACC,KAAK,GAAGH,YAAY,EAAEI,MAAM,EAAE;EAChE,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKX,MAAM;MACTS,KAAK,GAAG;QACN,GAAGA,KAAK;QACRF,IAAI,EAAEG,MAAM,CAACE;MACf,CAAC;MACD;IACF,KAAKV,MAAM;MACTO,KAAK,GAAG;QACN,GAAGA,KAAK;QACRF,IAAI,EAAEG,MAAM,CAACE;MACf,CAAC;MACD;IAEF,KAAKX,OAAO;MACVQ,KAAK,GAAG;QACN,GAAGA,KAAK;QACRF,IAAI,EAAE;MACR,CAAC;MACD;IACF,KAAKJ,iBAAiB;MACpBM,KAAK,GAAG;QACN,GAAGA,KAAK;QACRI,kBAAkB,EAAEH,MAAM,CAACE;MAC7B,CAAC;MACD;IACF,KAAKR,cAAc;MACjBK,KAAK,GAAG;QACN,GAAGA,KAAK;QACRK,OAAO,EAAEJ,MAAM,CAACE;MAClB,CAAC;MACD;IAEF,KAAKP,aAAa;MAChBI,KAAK,GAAG;QACN,GAAGA,KAAK;QACRM,YAAY,EAAEL,MAAM,CAACE,OAAO,CAACG,YAAY;QACzCC,YAAY,EAAEN,MAAM,CAACE,OAAO,CAACI;MAC/B,CAAC;MACD;IAEF;MACE;EACJ;EACA,OAAOP,KAAK;AACd;AAACQ,EAAA,GA9CuBT,WAAW;AAAA,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}